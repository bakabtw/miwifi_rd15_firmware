#!/bin/sh
#
# Copyright (c) 2019,2023 Qualcomm Technologies, Inc.
#
# All Rights Reserved.
# Confidential and Proprietary - Qualcomm Technologies, Inc.
#

[ -e /lib/functions.sh ] && . /lib/functions.sh
[ -e /lib/wifi/wifi-utils.sh ] && . /lib/wifi/wifi-utils.sh

IFNAME=$1
CMD=$2
CONFIG=$3
shift
shift
SSID=$@
PASS=$@

parent=$(cat /sys/class/net/${IFNAME}/parent)
pairwise=
map=
WPAD_VARRUN="$(get_wpad_var_run)"

is_section_ifname() {
	local config=$1
	local ifname
	config_get ifname "$config" ifname
	[ "${ifname}" = "$2" ] && eval "$3=$config"
}

hex2string()
{
	I=0
	while [ $I -lt ${#1} ];
	do
		echo -en "\x"${1:$I:2}
		let "I += 2"
	done
}

get_map_config() {
	local config="$1"
	local ifname
	config_get ifname "$config" ifname
	[ "${ifname}" = "$2" ] && config_get map "$config" map 0
}

is_map_config() {
	config_load wireless
	config_foreach get_map_config wifi-iface $1
}

get_config_val() {
	local key=$1
	local conf=/var/run/wpa_supplicant-$IFNAME.conf

	config_val=`wpa_cli -i$IFNAME -p $WPAD_VARRUN/wpa_supplicant-$IFNAME get_network 0 $1 | cut -f 2 -d= | sed -e 's/^"\(.*\)"/\1/'`
	if [ $key == 'psk' ]; then
		config_val=$(awk "BEGIN{FS=\"=\"} /[[:space:]]${key}=/ {print \$0}" $conf |grep "${key}=" |tail -n 1 | cut -f 2 -d= | sed -e 's/^"\(.*\)"/\1/')
	fi
	if [ $key == 'dpp_1905_connector' ]; then
		config_val=`wpa_cli -i$IFNAME -p $WPAD_VARRUN/wpa_supplicant-$IFNAME get $1 | cut -f 2 -d= | sed -e 's/^"\(.*\)"/\1/'`
	fi
	if [ $config_val == "FAIL" ]; then
		config_val=''
	fi
}

update_wireless() {
	get_config_val 'ssid'
	ssid=${config_val}

	get_config_val 'key_mgmt'
	key_mgmt=${config_val}

	get_config_val 'dpp_connector'
	dpp_connector=${config_val}

	get_config_val 'dpp_1905_connector'
	dpp_1905_connector=${config_val}

	get_config_val 'psk'
	psk=${config_val}

	get_config_val 'dpp_csign'
	dpp_csign=${config_val}

	get_config_val 'dpp_pp_key'
	dpp_pp_key=${config_val}

	get_config_val 'dpp_netaccesskey'
	dpp_netaccesskey=${config_val}

	ker_ver=`uname -r |cut -d. -f1`
	if [ $ker_ver == 5 ]; then
		. /sbin/wifi config
	else
		. /sbin/wifi detect
	fi
	sect=
	config_foreach is_section_ifname wifi-iface $IFNAME sect
	uci set wireless.${sect}.ssid=$ssid
	uci set wireless.${sect}.dpp_connector=$dpp_connector
	uci set wireless.${sect}.dpp_1905_connector=$dpp_1905_connector
	uci set wireless.${sect}.key=$psk
	uci set wireless.${sect}.dpp_csign=$dpp_csign
	uci set wireless.${sect}.dpp_pp_key=$dpp_pp_key
	uci set wireless.${sect}.dpp_netaccesskey=$dpp_netaccesskey
	uci commit wireless
}

get_pairwise() {
	if [ -f /sys/class/net/$parent/ciphercaps ]
	then
		cat /sys/class/net/$parent/ciphercaps | grep -i "gcmp"
		if [ $? -eq 0 ]
		then
			pairwise="CCMP CCMP-256 GCMP GCMP-256"
		else
			pairwise="CCMP"
		fi
	fi
}

case "$CMD" in
	DPP-CONF-RECEIVED)
		wpa_cli -i$IFNAME -p $WPAD_VARRUN/wpa_supplicant-$IFNAME remove_network all
		wpa_cli -i$IFNAME -p $WPAD_VARRUN/wpa_supplicant-$IFNAME add_network
		get_pairwise
		wpa_cli -i$IFNAME -p $WPAD_VARRUN/wpa_supplicant-$IFNAME set_network 0 pairwise $pairwise
		wpa_cli -i$IFNAME -p $WPAD_VARRUN/wpa_supplicant-$IFNAME set_network 0 group "CCMP"
		wpa_cli -i$IFNAME -p $WPAD_VARRUN/wpa_supplicant-$IFNAME set_network 0 proto "RSN"
		;;
	DPP-CONFOBJ-AKM)
		encryption=
		sae=
		dpp=
		sae_require_mfp=
		ieee80211w=
		key_mgmt=
		is_map_config $IFNAME
		wpa_cli -i$IFNAME -p $WPAD_VARRUN/wpa_supplicant-$IFNAME set_network 0 multi_ap_profile $map
		if [ $map -gt 0 ]
		then
			wpa_cli -i$IFNAME -p $WPAD_VARRUN/wpa_supplicant-$IFNAME set_network 0 multi_ap_backhaul_sta 1
		fi
		case "$CONFIG" in
			dpp+psk+sae)
				key_mgmt="DPP SAE WPA-PSK"
				encryption="psk2+ccmp"
				sae=1
				dpp=1
				ieee80211w=1
				sae_require_mfp=1
				;;
			dpp+sae)
				key_mgmt="DPP SAE"
				encryption="ccmp"
				sae=1
				ieee80211w=2
				dpp=1
				;;
			dpp)
				key_mgmt="DPP"
				encryption="dpp"
				ieee80211w=2
				dpp=1
				sae=0
				;;
			sae)
				key_mgmt="SAE"
				encryption="ccmp"
				sae=1
				ieee80211w=2
				dpp=0
				;;
			psk+sae)
				key_mgmt="SAE WPA-PSK"
				encryption="psk2+ccmp"
				sae=1
				ieee80211w=1
				sae_require_mfp=1
				dpp=0
				;;
			psk)
				key_mgmt="WPA-PSK"
				encryption="psk2"
				ieee80211w=1
				dpp=0
				sae=0
				;;
		esac
		wpa_cli -i$IFNAME -p $WPAD_VARRUN/wpa_supplicant-$IFNAME set_network 0 ieee80211w $ieee80211w
		wpa_cli -i$IFNAME -p $WPAD_VARRUN/wpa_supplicant-$IFNAME set_network 0 key_mgmt $key_mgmt

		ker_ver=`uname -r |cut -d. -f1`
		if [ $ker_ver == 5 ]; then
			. /sbin/wifi config
		else
			. /sbin/wifi detect
		fi
		sect=
		config_foreach is_section_ifname wifi-iface $IFNAME sect
		uci set wireless.${sect}.encryption=$encryption
		uci set wireless.${sect}.sae=$sae
		uci set wireless.${sect}.sae_require_mfp=$sae_require_mfp
		uci set wireless.${sect}.dpp=$dpp
		uci set wireless.${sect}.ieee80211w=$ieee80211w
		uci commit wireless
		;;
	DPP-CONFOBJ-SSID)
		wpa_cli -i$IFNAME -p $WPAD_VARRUN/wpa_supplicant-$IFNAME set_network 0 ssid \""$SSID"\"
		;;
	DPP-CONNECTOR)
		wpa_cli -i$IFNAME -p $WPAD_VARRUN/wpa_supplicant-$IFNAME set dpp_connector $CONFIG
		wpa_cli -i$IFNAME -p $WPAD_VARRUN/wpa_supplicant-$IFNAME set_network 0 dpp_connector \"${CONFIG}\"
		;;
	DPP-1905-CONNECTOR)
		wpa_cli -i$IFNAME -p $WPAD_VARRUN/wpa_supplicant-$IFNAME set dpp_1905_connector $CONFIG
		update_wireless
		;;
	DPP-CONFOBJ-PASS)
		PASS_STR=$(hex2string $PASS)
		get_pairwise

		wpa_cli -i$IFNAME -p $WPAD_VARRUN/wpa_supplicant-$IFNAME set_network 0 psk \"${PASS_STR}\"
		wpa_cli -i$IFNAME -p $WPAD_VARRUN/wpa_supplicant-$IFNAME set_network 0 pairwise $pairwise
		wpa_cli -i$IFNAME -p $WPAD_VARRUN/wpa_supplicant-$IFNAME dpp_bootstrap_remove \*
		;;
	DPP-CONFOBJ-PSK)
		PASS_STR=$(hex2string "$CONFIG")
		get_pairwise

		wpa_cli -i$IFNAME -p $WPAD_VARRUN/wpa_supplicant-$IFNAME set_network 0 psk $PASS_STR
		wpa_cli -i$IFNAME -p $WPAD_VARRUN/wpa_supplicant-$IFNAME set_network 0 pairwise $pairwise
		wpa_cli -i$IFNAME -p $WPAD_VARRUN/wpa_supplicant-$IFNAME dpp_bootstrap_remove \*
		;;
	DPP-C-SIGN-KEY)
		wpa_cli -i$IFNAME -p $WPAD_VARRUN/wpa_supplicant-$IFNAME set dpp_csign $CONFIG
		wpa_cli -i$IFNAME -p $WPAD_VARRUN/wpa_supplicant-$IFNAME set_network 0 dpp_csign $CONFIG
		;;
	DPP-PP-KEY)
		wpa_cli -i$IFNAME -p $WPAD_VARRUN/wpa_supplicant-$IFNAME set dpp_pp_key $CONFIG
		wpa_cli -i$IFNAME -p $WPAD_VARRUN/wpa_supplicant-$IFNAME set_network 0 dpp_pp_key $CONFIG
		;;
	DPP-NET-ACCESS-KEY)
		wpa_cli -i$IFNAME -p $WPAD_VARRUN/wpa_supplicant-$IFNAME set dpp_netaccesskey $CONFIG
		wpa_cli -i$IFNAME -p $WPAD_VARRUN/wpa_supplicant-$IFNAME set_network 0 dpp_netaccesskey $CONFIG

		wpa_cli -i$IFNAME -p $WPAD_VARRUN/wpa_supplicant-$IFNAME enable_network 0
		wpa_cli -i$IFNAME -p $WPAD_VARRUN/wpa_supplicant-$IFNAME save_config

		wpa_cli -i$IFNAME -p $WPAD_VARRUN/wpa_supplicant-$IFNAME disable
		wpa_cli -i$IFNAME -p $WPAD_VARRUN/wpa_supplicant-$IFNAME enable

		update_wireless

		;;
esac
